#!/bin/sh

. /etc/os-release
. /lib/functions/uci-defaults.sh

[ $(uname -m) = "x86_64" ] && alias board_name="echo x86_64"

# OTA
if [ "$VERSION_TYPE" = "minimal" ]; then
    OTA_URL="https://api.cooluc.com/openwrt/ota_minimal.json"
else
    OTA_URL="https://api.cooluc.com/openwrt/ota.json"
fi

devices_setup()
{
    case "$(board_name)" in
    friendlyarm,nanopi-r4s)
        uci set irqbalance.irqbalance.enabled='0'
        uci commit irqbalance
        service irqbalance stop
        [ $(uname -r | awk -F. '{print $1}') = 6 ] && {
            sed -i "/openwrt_core/c\src/gz openwrt_core https://raw.cooluc.com/sbwml/kmod-aarch64/master/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf
            uci set ota.config.api_url="$OTA_URL"
            uci commit ota
        }
        ;;
    friendlyarm,nanopi-r5c|\
    friendlyarm,nanopi-r5s)
        uci set irqbalance.irqbalance.enabled='0'
        uci commit irqbalance
        service irqbalance stop
        sed -i "/openwrt_core/c\src/gz openwrt_core https://raw.cooluc.com/sbwml/kmod-aarch64/master/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf
        uci set ota.config.api_url="$OTA_URL"
        uci commit ota
        ;;
    x86_64)
        [ $(uname -r | awk -F. '{print $1}') = 6 ] && {
            [ -f /sys/kernel/btf/vmlinux ] && sed -i "/openwrt_core/c\src/gz openwrt_core https://raw.cooluc.com/sbwml/kmod-x86_64/main/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf
        }
        uci set ota.config.api_url="$OTA_URL"
        uci commit ota
        ;;
    esac
}

# theme
if [ "$VERSION_TYPE" != "minimal" ]; then
    uci set luci.main.mediaurlbase='/luci-static/argon'
    uci set luci.main.pollinterval='2'
    uci commit luci
fi

# timezone
uci set system.@system[0].timezone=CST-8
uci set system.@system[0].zonename=Asia/Shanghai
uci commit system

# log level
uci set system.@system[0].conloglevel='1'
uci set system.@system[0].cronloglevel='9'
uci commit system

# zram
mem_total=$(grep MemTotal /proc/meminfo | awk '{print $2}')
zram_size=$(echo | awk "{print int($mem_total*0.25/1024)}")
uci set system.@system[0].zram_size_mb="$zram_size"
uci set system.@system[0].zram_comp_algo='lz4'
uci commit system

# opkg mirror
sed -i 's,downloads.openwrt.org,mirrors.pku.edu.cn/openwrt,g' /etc/opkg/distfeeds.conf

# nginx
uci set nginx.global.uci_enable='true'
uci del nginx._lan
uci del nginx._redirect2ssl
uci add nginx server
uci rename nginx.@server[0]='_lan'
uci set nginx._lan.server_name='_lan'
uci add_list nginx._lan.listen='80 default_server'
uci add_list nginx._lan.listen='[::]:80 default_server'
#uci add_list nginx._lan.include='restrict_locally'
uci add_list nginx._lan.include='conf.d/*.locations'
uci set nginx._lan.access_log='off; # logd openwrt'
uci commit nginx
service nginx restart

# docker mirror
if [ -f /etc/config/dockerd ] && [ $(grep -c edu /etc/config/dockerd) -eq '0' ] && [ "$VERSION_TYPE" != "minimal" ]; then
    uci add_list dockerd.globals.registry_mirrors='https://docker.mirrors.sjtug.sjtu.edu.cn'
    uci commit dockerd
fi

# upnp
uci set upnpd.config.enabled='1'
uci commit upnpd
service miniupnpd restart

# firewall
uci set firewall.@defaults[0].fullcone='1'
[ $(grep -c shortcut_fe /etc/config/firewall) -eq '0' ] && uci set firewall.@defaults[0].flow_offloading='1'
uci set firewall.@defaults[0].input='ACCEPT'
uci commit firewall

# diagnostics
if [ $(uci -q get luci.diag.ping) = "openwrt.org" ]; then
    uci set luci.diag.dns='www.qq.com'
    uci set luci.diag.ping='www.qq.com'
    uci set luci.diag.route='www.qq.com'
    uci commit luci
fi

# packet steering
uci -q get network.globals.packet_steering > /dev/null || {
    uci set network.globals='globals'
    uci set network.globals.packet_steering=1
    uci commit network
}

# disable coremark
sed -i '/coremark/d' /etc/crontabs/root
crontab /etc/crontabs/root

# init
devices_setup

# upgrade openwrt-22.03 -> 23.05
if [ "$BUILD_DATE" -gt "1687019581" ]; then
    [ $(grep -c "nsCertType" /etc/ssl/openssl.cnf) -gt '0' ] && [ -f /rom/etc/ssl/openssl.cnf ] && \
        rm -f /etc/ssl/openssl.cnf && \cp -a /rom/etc/ssl/openssl.cnf /etc/ssl/openssl.cnf
    [ $(grep -c "cryptodev_hw" /etc/config/cpufreq) -gt '0' ] && uci -q del cpufreq.cpufreq.cryptodev_hw && uci -q commit cpufreq
fi

exit 0
